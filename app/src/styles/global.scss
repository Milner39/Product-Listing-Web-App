@use "./reset.scss";

@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');


:root {
    font-family: "Roboto", sans-serif;

    --fw-thin: 100;
    --fw-light: 300;
    --fw-regular: 400;
    --fw-medium: 500;
    --fw-bold: 700;
    --fw-black: 900;

    --browser-fs-scale: 1; // When the browser is resized, the font size will be scaled by this factor
    --element-fs-scale: 1; // Exceptionally large/small elements' font size will be scaled by this factor
}


// Font sizes
h1 {
    font-size: calc(2.5rem * var(--browser-fs-scale) * var(--element-fs-scale));
}
h2 {
    font-size: calc(2rem * var(--browser-fs-scale) * var(--element-fs-scale));
}
h3 {
    font-size: calc(1.75rem * var(--browser-fs-scale) * var(--element-fs-scale));
}
h4 {
    font-size: calc(1.5rem * var(--browser-fs-scale) * var(--element-fs-scale));
}
h5 {
    font-size: calc(1.25rem * var(--browser-fs-scale) * var(--element-fs-scale));
}
h6 {
    font-size: calc(1rem * var(--browser-fs-scale) * var(--element-fs-scale));
}
p {
    font-size: calc(1rem * var(--browser-fs-scale) * var(--element-fs-scale));
}
small {
    font-size: calc(0.875rem * var(--browser-fs-scale) * var(--element-fs-scale));
}


// Stop SVGs being huge/tiny when unstyled
svg {
    min-width: 1rem;
    .fill {
        fill: currentColor;
    }
}


// Inputs
.input--checkbox {
    aspect-ratio: 1/1;
    width: 1.5em;

    border: 1px solid black;
    border-radius: 0.25em;

    color: white;

    padding: 0.15em;

    &[checked=true] {
        background-color: black;
    }
}


// Buttons
.button--pill {
    display: block;
    background-color: black;

    padding: 0.5rem 1rem;
    border-radius: 9999rem;

    display: grid;
    align-items: center;

    > * {
        font-weight: var(--fw-bold);
        color: white;

        text-wrap: nowrap;
    }
}

.button--dot {
    @extend .button--pill;
    padding: 0.5rem;
}



// Utility classes
.flex {
    display: flex;
}

.flex-col {
    @extend .flex;
    flex-direction: column;
}


.grid-center {
    display: grid;
    align-items: center;
}


.bold {
    font-weight: var(--fw-bold);
}

.nowrap {
    text-wrap: nowrap;

    > * {
        text-wrap: nowrap;
    }
    /*
        If applied to wrapper: text in wrapper will not wrap
        If applied to text: text will not wrap and child selector will be ignored
    */
}



// Misc Classes
.grid--cards {
    display: grid;
    gap: 2rem;
    grid-template-columns: repeat(auto-fill, minmax(256px, 1fr));
}